// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RandomQuotes.Data;

namespace RandomQuotes.Migrations
{
    [DbContext(typeof(EntitiesContext))]
    [Migration("20211030220222_tracker")]
    partial class tracker
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RandomQuotes.Models.QuotesViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Annonymous",
                            CreatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 405, DateTimeKind.Local).AddTicks(7791),
                            Quote = "Do not despise the days of your little beginning",
                            UpdatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 407, DateTimeKind.Local).AddTicks(7712)
                        },
                        new
                        {
                            Id = 2,
                            Author = "Annonymous",
                            CreatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 407, DateTimeKind.Local).AddTicks(8746),
                            Quote = "Just flow with the moment",
                            UpdatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 407, DateTimeKind.Local).AddTicks(8772)
                        },
                        new
                        {
                            Id = 3,
                            Author = "Annonymous",
                            CreatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 407, DateTimeKind.Local).AddTicks(8785),
                            Quote = "The end will justify the beginning",
                            UpdatedAt = new DateTime(2021, 10, 30, 23, 2, 21, 407, DateTimeKind.Local).AddTicks(8788)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
